import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  // console.log(user);

  if (!user) return null;

  return <div className="flex gap-4 w-full">
    <Image
      src={user.profileImageUrl} 
      alt={`@${user.username}'s profile image`} 
      width={64} height={64} 
      className="w-16 h-16 rounded-full" />
    <input
      className="rounded-xl w-full bg-slate-900 text-white outline-none py-3 px-4 text-xs focus:px-6 duration-200"
      type="text"
      placeholder="What do you think?"
      />
  </div>
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div className="flex gap-3 p-8 border-b border-slate-400">
      <Image
        src={author.profileImageUrl} 
        alt={`@${author.username}'s profile image`} 
        width={32} height={32} 
        className="w-8 h-8 rounded-full" />
      <div className="flex flex-col">
        <div className="flex gap-2 items-center text-slate-100">
          <span className="font-normal">{`@${author.username}`}</span>
          <span>â€¢</span>
          <span className="text-sm font-thin">{`${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="flex flex-col">
      {[...data, ...data]?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  )
}

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser()

  // start fetching asap
  api.posts.getAll.useQuery();

  // return empty div if user isn't loaded yet
  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="p-6 flex border-b border-slate-400">
            {
              !isSignedIn &&
              <SignInButton mode="modal">
                <button className="w-fit rounded-lg py-2 px-8 cursor-pointer active:scale-95
                  shadow-md text-xs duration-300 bg-blue-700 active:bg-opacity-80
                  ease-in-out bg-transparent font-medium md:text-sm text-white">Sign in</button>
              </SignInButton>
            }

            {isSignedIn && <CreatePostWizard />}
          </div>

          <Feed />
          
          <div className="flex justify-center p-8">{ !!isSignedIn &&
            <SignOutButton>
              <button className="w-fit rounded-lg py-2 px-8 cursor-pointer active:scale-95
                shadow-md text-xs duration-300 bg-red-700 active:bg-opacity-80
                ease-in-out bg-transparent font-medium md:text-sm text-white">Sign out</button>
            </SignOutButton>
            }
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
